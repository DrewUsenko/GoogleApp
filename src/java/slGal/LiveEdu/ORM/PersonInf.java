package slGal.LiveEdu.ORM;
// Generated 04.05.2017 21:56:35 by Hibernate Tools 4.3.1

import java.io.FileNotFoundException;
import java.io.UnsupportedEncodingException;
import java.nio.file.Path;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.CascadeType;
import javax.persistence.ManyToOne;
import slGal.LiveEdu.PasswordGenerator;
import slGal.LiveEdu.Translate;

/**
 * PersonInf generated by hbm2java
 */
public class PersonInf implements java.io.Serializable {

    public static final String EMAIL_DOMEN = "@hneu.net";

    private static Path nameFileAlphabetic;

    //@OneToMany(mappedBy = "pers", cascade = CascadeType.ALL)
    // @LazyCollection(LazyCollectionOption.FALSE)
    private Integer idPerson;
    private String firstname;
    private String lastname;
    private String patronymic;
    private String iin;
    private String firstnameEn;
    private String lastnameEn;
    private String patronymicEn;
    private String emailPersonal;
    private String emailCorporate;
    private Boolean pdf;
    private String passPersonal;
    private String passCorporate;
    private Set<Services> services = new HashSet<Services>(0);
    private Set<StudentInf> studentInfs = new HashSet<StudentInf>(0);
    private Set<StuffInf> stuffInfs;
    private StudentInf studentInf;

    private Boolean moodle;
    private Boolean gitlab;
    private Boolean office;
    private Boolean msdn;
    private Boolean exist;

    public PersonInf() {
    }

    public PersonInf(String firstname, String lastname, String iin) {
        this.firstname = firstname;
        this.lastname = lastname;
        this.iin = iin;
    }

    public PersonInf(String firstname, String lastname, String patronymic,
            String iin, String firstnameEn, String lastnameEn, String patronymicEn,
            String emailPersonal, String emailCorporate, Boolean pdf,
            String passPersonal, String passCorporate, Set<Services> service,
            Set<StudentInf> studentInfs, Set<StuffInf> stuffInfs,
            Boolean moodle, Boolean gitlab, Boolean office, Boolean msdn, Boolean exist) {
        this.firstname = firstname;
        this.lastname = lastname;
        this.patronymic = patronymic;
        this.iin = iin;
        this.firstnameEn = firstnameEn;
        this.lastnameEn = lastnameEn;
        this.patronymicEn = patronymicEn;
        this.emailPersonal = emailPersonal;
        this.emailCorporate = emailCorporate;
        this.pdf = pdf;
        this.passPersonal = passPersonal;
        this.passCorporate = passCorporate;
        this.services = service;
        this.studentInfs = studentInfs;
        this.stuffInfs = stuffInfs;

        this.moodle = moodle;
        this.gitlab = gitlab;
        this.office = office;
        this.msdn = msdn;
        this.exist = exist;
    }

    // <editor-fold defaultstate="collapsed" desc="Getters and setters.">
    public Integer getIdPerson() {
        return this.idPerson;
    }

    public void setIdPerson(Integer idPerson) {
        this.idPerson = idPerson;
    }

    public String getFirstname() {
        return this.firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    public String getLastname() {
        return this.lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    public String getPatronymic() {
        return this.patronymic;
    }

    public void setPatronymic(String patronymic) {
        this.patronymic = patronymic;
    }

    public String getIin() {
        return this.iin;
    }

    public void setIin(String iin) {
        this.iin = iin;
    }

    public String getFirstnameEn() {
        return this.firstnameEn;
    }

    public void setFirstnameEn(String firstnameEn) {
        this.firstnameEn = firstnameEn;
    }

    public String getLastnameEn() {
        return this.lastnameEn;
    }

    public void setLastnameEn(String lastnameEn) {
        this.lastnameEn = lastnameEn;
    }

    public String getPatronymicEn() {
        return this.patronymicEn;
    }

    public void setPatronymicEn(String patronymicEn) {
        this.patronymicEn = patronymicEn;
    }

    public String getEmailPersonal() {
        return this.emailPersonal;
    }

    public void setEmailPersonal(String emailPersonal) {
        this.emailPersonal = emailPersonal;
    }

    public String getEmailCorporate() {
        return this.emailCorporate;
    }

    public void setEmailCorporate(String emailCorporate) {
        this.emailCorporate = emailCorporate;
    }

    public Boolean getPdf() {
        return this.pdf;
    }

    public void setPdf(Boolean pdf) {
        this.pdf = pdf;
    }

    public String getPassPersonal() {
        return this.passPersonal;
    }

    public void setPassPersonal(String passPersonal) {
        this.passPersonal = passPersonal;
    }

    public String getPassCorporate() {
        return this.passCorporate;
    }

    public void setPassCorporate(String passCorporate) {
        this.passCorporate = passCorporate;
    }

    public Set<Services> getServices() {
        return this.services;
    }

    public void setServices(Set<Services> service) {
        this.services = service;
    }

    public Set<StudentInf> getStudentInfs() {
        return this.studentInfs;
    }

    public void setStudentInfs(Set<StudentInf> studentInfs) {
        this.studentInfs = studentInfs;
    }

    public Set<StuffInf> getStuffInfs() {
        return this.stuffInfs;
    }

    public void setStuffInfs(Set<StuffInf> stuffInfs) {
        this.stuffInfs = stuffInfs;
    }

    public void clearPassword() {
        setPassCorporate(null);
    }
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Some methods.">
    public boolean generatePassword() {
        if (passCorporate == null) {
            PasswordGenerator pswGen = new PasswordGenerator.BuilderMask()
                    .appendMask(PasswordGenerator.SYMBOLS_UPPER_ALPHABETIC_ENGLISH, 1)
                    .appendMask(PasswordGenerator.SYMBOLS_LOWER_ALPHABETIC_ENGLISH, 3)
                    .appendMask(PasswordGenerator.SYMBOLS_DIGIT, 4)
                    .build();

            setPassCorporate(pswGen.generate());
            return true;
        } else {
            return false;
        }
    }

    public static void setNameOfAlphabeticFile(Path pRootDir) {
        nameFileAlphabetic = pRootDir.resolve("res/alphabetic.ini");
    }

    public static Path getNameOfAlphabeticFile() {
        return nameFileAlphabetic;
    }

    /**
     * Translate FIO
     */
    public void translateFIO() {
        Translate tr = null;
        try {
            //            tr = new Translate(nameFileAlphabetic, "Cp1251");  // Exception FileNotFoundException in nameFileAlphabetic, UnsupportedEncodingException in "Cp1251"
            tr = new Translate(PersonInf.nameFileAlphabetic.toFile(), "UTF-8"); // Exception FileNotFoundException in nameFileAlphabetic, UnsupportedEncodingException in "Cp1251"
            if (this.firstnameEn == null) {
                setFirstnameEn(tr.translating1(firstname, "UTF-8")); // Exception UnsupportedEncodingException in "Cp1251"
            }
            if (this.lastnameEn == null) {
                setLastnameEn(tr.translating1(lastname, "UTF-8")); // Exception UnsupportedEncodingException in "Cp1251"
            }
            if (this.patronymicEn == null) {
                setPatronymicEn(tr.translating1(patronymic, "UTF-8")); // Exception UnsupportedEncodingException in "Cp1251"
            }
        } catch (FileNotFoundException | UnsupportedEncodingException ex) {
            Logger.getLogger(Translate.class.getName()).log(Level.SEVERE, "translateFIO", ex);
        }
    }

    public boolean generateEmail() {
        if (emailCorporate != null) {
            return false;
        }
        if (this.firstname == null || this.lastnameEn == null) {
            return false;
        }

        StringBuilder sbNewEmail = new StringBuilder()
                .append(this.firstnameEn)
                .append(".")
                .append(this.lastnameEn)
                .append(PersonInf.EMAIL_DOMEN);

        setEmailCorporate(sbNewEmail.toString());
        return true;
    }

    public boolean generateEmail(int type) {
        if (emailCorporate != null) {
            return false;
        }
        if (this.firstnameEn == null || this.lastnameEn == null) {
            return false;
        }

        String lastnameEnFirst = lastnameEn.split(" ")[0];
        StringBuilder sbNewEmail = new StringBuilder();
        switch (type) {
            case 1:
                sbNewEmail.append(this.firstnameEn)
                        .append(".")
                        .append(lastnameEnFirst)
                        .append(PersonInf.EMAIL_DOMEN);
                break;
            case 2:
                sbNewEmail.append(lastnameEnFirst)
                        .append(".")
                        .append(this.firstnameEn)
                        .append(PersonInf.EMAIL_DOMEN);
                break;
            case 3:
                sbNewEmail.append(this.firstnameEn)
                        .append("-")
                        .append(lastnameEnFirst)
                        .append(PersonInf.EMAIL_DOMEN);
                break;
            case 4:
                sbNewEmail.append(lastnameEnFirst)
                        .append("-")
                        .append(this.firstnameEn)
                        .append(PersonInf.EMAIL_DOMEN);
                break;
        }
        setEmailCorporate(sbNewEmail.toString().replace(" ", ""));
        return true;
    }

    public void clearEmail() {
        setEmailCorporate(null);
    }

    // </editor-fold>
    public Boolean getMoodle() {
        return this.moodle;
    }

    public void setMoodle(Boolean moodle) {
        this.moodle = moodle;
    }

    public Boolean getGitlab() {
        return this.gitlab;
    }

    public void setGitlab(Boolean gitlab) {
        this.gitlab = gitlab;
    }

    public Boolean getOffice() {
        return this.office;
    }

    public void setOffice(Boolean office) {
        this.office = office;
    }

    public Boolean getMsdn() {
        return this.msdn;
    }

    public void setMsdn(Boolean msdn) {
        this.msdn = msdn;
    }

    public Boolean getExist() {
        return this.exist;
    }

    public void setExist(Boolean exist) {
        this.exist = exist;
    }

    @ManyToOne(cascade = CascadeType.ALL)
    public StudentInf getStudent() {
        return this.studentInf;
    }

    public void setStudent(StudentInf studentInf) {
        this.studentInf = studentInf;
    }

}
