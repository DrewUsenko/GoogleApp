<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<!--
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

Copyright (c) 2008, 2016 Oracle and/or its affiliates. All rights reserved.

Oracle and Java are registered trademarks of Oracle and/or its affiliates.
Other names may be trademarks of their respective owners.

The contents of this file are subject to the terms of either the GNU
General Public License Version 2 only ("GPL") or the Common
Development and Distribution License("CDDL") (collectively, the
"License"). You may not use this file except in compliance with the
License. You can obtain a copy of the License at
http://www.netbeans.org/cddl-gplv2.html
or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
specific language governing permissions and limitations under the
License.  When distributing the software, include this License Header
Notice in each file and include the License file at
nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
particular file as subject to the "Classpath" exception as provided
by Oracle in the GPL Version 2 section of the License file that
accompanied this code. If applicable, add the following below the
License Header, with the fields enclosed by brackets [] replaced by
your own identifying information:
"Portions Copyrighted [year] [name of copyright owner]"

If you wish your version of this file to be governed by only the CDDL
or only the GPL Version 2, indicate your decision by adding
"[Contributor] elects to include this software in this distribution
under the [CDDL or GPL Version 2] license." If you do not indicate a
single choice of license, a recipient has the option to distribute
your version of this file under either the CDDL, the GPL Version 2 or
to extend the choice of license to its licensees as provided above.
However, if you add GPL Version 2 code and therefore, elected the GPL
Version 2 license, then the option applies only if the new code is
made subject to such option by the copyright holder.

Contributor(s):
-->
<hibernate-configuration>
  <session-factory>
    <!-- SQL dialect -->
    <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
    <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
    <property name="hibernate.connection.username">root</property>
    <property name="hibernate.connection.password">root</property>
    <property name="hibernate.connection.url">jdbc:mysql://127.0.0.1:3306/googleschema?autoReconnect=true&amp;characterEncoding=UTF-8&amp;useUnicode=true</property>
    <property name="hibernate.connection.charSet">UTF-8</property>
    <!-- Echo all executed SQL to stdout -->
    <property name="hibernate.show_sql">true</property>
    <property name="hibernate.format_sql">true</property>
    <!-- JDBC connection pool (use the built-in) -->
    <property name="hibernate.connection.pool_size">10</property>
    <!-- Disable the second-level cache -->
    <!--как только переполнится пул коннектов, укажем, сколько соединений ещё добавить в пул-->
    <property name="hibernate.c3p0.acquire_increment">3</property>
    <!--When an idle connection is removed from the pool (in second). Hibernate default: 0, never expire.-->
    <property name="hibernate.c3p0.timeout">30</property>
    <!--Minimum number of JDBC connections in the pool. Hibernate default: 1-->
    <property name="hibernate.c3p0.min_size">3</property>
    <!--Maximum number of JDBC connections in the pool. Hibernate default: 100-->
    <property name="hibernate.c3p0.max_size">15</property>
    <!--Number of prepared statements will be cached. Increase performance. Hibernate default: 0 , caching is disable.-->
    <property name="hibernate.c3p0.max_statements">0</property>
    <!-- idle time in seconds before a connection is automatically validated. Hibernate default: 0 -->
    <property name="hibernate.c3p0.idle_test_period">300</property>
    <!--как долго ждать, чтобы подтвердить соединение, т.е. не закрывать его, а, например, сделать запрос "select 1"-->
    <property name="hibernate.c3p0.preferredTestQuery">select 1;</property>
    <!-- Connection auto reconnect after long inactivity -->
    <property name="connection.autoReconnect">true</property>
    <property name="connection.autoReconnectForPools">true</property>
    <property name="connection.is-connection-validation-required">true</property>
    <property name="current_session_context_class">thread</property> 
    <property name="hibernate.enable_lazy_load_no_trans">true</property> 
    
    <!--<property name="show_sql">true</property>
    <property name="format_sql">true</property>
    <property name="use_sql_comments">true</property>-->
    
    <!--<property name="jpaProperties">
        <props>
            <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
        </props>
    </property>-->
    
    <!-- Mappings -->
    <mapping resource="slGal/LiveEdu/ORM/PersonInf.hbm.xml"/>
    <mapping resource="slGal/LiveEdu/ORM/StuffInf.hbm.xml"/>
    <mapping resource="slGal/LiveEdu/ORM/DepartmentInf.hbm.xml"/>
    <mapping resource="slGal/LiveEdu/ORM/Services.hbm.xml"/>
    <mapping resource="slGal/LiveEdu/ORM/FacultyInf.hbm.xml"/>
    <mapping resource="slGal/LiveEdu/ORM/StudentInf.hbm.xml"/>
    <mapping resource="slGal/LiveEdu/ORM/SpecInf.hbm.xml"/>
  </session-factory>
</hibernate-configuration>
